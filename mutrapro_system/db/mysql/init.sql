CREATE DATABASE IF NOT EXISTS MuTraProDB CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
USE MuTraProDB;

DROP TABLE IF EXISTS Notifications;
DROP TABLE IF EXISTS Files;
DROP TABLE IF EXISTS Bookings;
DROP TABLE IF EXISTS StudioRooms;
DROP TABLE IF EXISTS RequestAssignees;
DROP TABLE IF EXISTS Requests;
DROP TABLE IF EXISTS Services;
DROP TABLE IF EXISTS Users;
DROP TABLE IF EXISTS Roles;

CREATE TABLE Roles(
  RoleId INT AUTO_INCREMENT PRIMARY KEY,
  Code VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE Users(
  UserId INT AUTO_INCREMENT PRIMARY KEY,
  FullName VARCHAR(120) NOT NULL,
  Email VARCHAR(120) UNIQUE NOT NULL,
  PasswordHash VARCHAR(255) NOT NULL,
  RoleId INT NOT NULL,
  IsActive BOOLEAN NOT NULL DEFAULT TRUE,
  CreatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (RoleId) REFERENCES Roles(RoleId)
);

CREATE TABLE Services(
  ServiceId INT AUTO_INCREMENT PRIMARY KEY,
  Code VARCHAR(50) UNIQUE NOT NULL,
  DisplayName VARCHAR(120) NOT NULL
);

CREATE TABLE Requests(
  RequestId INT AUTO_INCREMENT PRIMARY KEY,
  CustomerId INT NOT NULL,
  ServiceId INT NOT NULL,
  Title VARCHAR(200) NOT NULL,
  Detail TEXT,
  Priority TINYINT NOT NULL DEFAULT 2,
  Status VARCHAR(30) NOT NULL DEFAULT 'NEW',
  InputFileId INT,
  OutputFileId INT,
  CreatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  UpdatedAt DATETIME NULL,
  FOREIGN KEY (CustomerId) REFERENCES Users(UserId),
  FOREIGN KEY (ServiceId) REFERENCES Services(ServiceId)
);

CREATE TABLE RequestAssignees(
  Id INT AUTO_INCREMENT PRIMARY KEY,
  RequestId INT NOT NULL,
  ExpertId INT NOT NULL,
  RoleCode VARCHAR(50) NOT NULL,
  AssignedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (RequestId) REFERENCES Requests(RequestId),
  FOREIGN KEY (ExpertId) REFERENCES Users(UserId)
);

CREATE TABLE StudioRooms(
  RoomId INT AUTO_INCREMENT PRIMARY KEY,
  Name VARCHAR(80) NOT NULL,
  Location VARCHAR(200),
  Capacity INT NOT NULL DEFAULT 1,
  IsActive BOOLEAN NOT NULL DEFAULT TRUE
);

CREATE TABLE Bookings(
  BookingId INT AUTO_INCREMENT PRIMARY KEY,
  RoomId INT NOT NULL,
  RequestId INT,
  StartAt DATETIME NOT NULL,
  EndAt DATETIME NOT NULL,
  CreatedBy INT NOT NULL,
  FOREIGN KEY (RoomId) REFERENCES StudioRooms(RoomId),
  FOREIGN KEY (RequestId) REFERENCES Requests(RequestId),
  FOREIGN KEY (CreatedBy) REFERENCES Users(UserId)
);

CREATE TABLE Files(
  FileId INT AUTO_INCREMENT PRIMARY KEY,
  OwnerId INT NOT NULL,
  FileName VARCHAR(255) NOT NULL,
  FileUrl VARCHAR(500) NOT NULL,
  CreatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (OwnerId) REFERENCES Users(UserId)
);

CREATE TABLE Notifications(
  NotificationId INT AUTO_INCREMENT PRIMARY KEY,
  UserId INT NOT NULL,
  Message VARCHAR(500) NOT NULL,
  IsRead BOOLEAN NOT NULL DEFAULT FALSE,
  CreatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (UserId) REFERENCES Users(UserId)
);

INSERT INTO Roles(Code) VALUES
('CUSTOMER'),('TRANSCRIBER'),('MIXER'),('ARTIST'),('STUDIO_ADMIN'),('ADMIN');

INSERT INTO Services(Code, DisplayName) VALUES
('TRANSCRIPTION','Phiên âm'),
('MIXING','Hòa âm'),
('RECORDING','Thu âm');

INSERT INTO StudioRooms(Name, Location, Capacity, IsActive) VALUES
('Room A','1st Floor',2,1),('Room B','2nd Floor',3,1);
